{"id":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","dependencies":[{"name":"F:\\Verstka\\tours\\package.json","includedInParent":true,"mtime":1618426591122},{"name":"F:\\Verstka\\tours\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1618409125054},{"name":"../../Utils","loc":{"line":4,"column":24},"parent":"F:\\Verstka\\tours\\node_modules\\tsparticles\\dist\\Interactions\\Particles\\Attractor.js","resolved":"F:\\Verstka\\tours\\node_modules\\tsparticles\\dist\\Utils\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Attractor {\n    constructor(container) {\n        this.container = container;\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container;\n        const distance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const { dx, dy } = Utils_1.NumberUtils.getDistances(pos1, pos2);\n            const rotate = p1.options.move.attract.rotate;\n            const ax = dx / (rotate.x * 1000);\n            const ay = dy / (rotate.y * 1000);\n            p1.velocity.horizontal -= ax;\n            p1.velocity.vertical -= ay;\n            p2.velocity.horizontal += ax;\n            p2.velocity.vertical += ay;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\nexports.Attractor = Attractor;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Attractor {\n    constructor(container) {\n        this.container = container;\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container;\n        const distance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const { dx, dy } = Utils_1.NumberUtils.getDistances(pos1, pos2);\n            const rotate = p1.options.move.attract.rotate;\n            const ax = dx / (rotate.x * 1000);\n            const ay = dy / (rotate.y * 1000);\n            p1.velocity.horizontal -= ax;\n            p1.velocity.vertical -= ay;\n            p2.velocity.horizontal += ax;\n            p2.velocity.vertical += ay;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\nexports.Attractor = Attractor;\n"},"lineCount":37}},"error":null,"hash":"54197ca9fceb5ac99d610eda0486b7f8","cacheData":{"env":{}}}