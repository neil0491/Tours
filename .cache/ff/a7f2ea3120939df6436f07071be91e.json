{"id":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","dependencies":[{"name":"F:\\Verstka\\tours\\package.json","includedInParent":true,"mtime":1618426591122},{"name":"F:\\Verstka\\tours\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1618409125054},{"name":"../../Utils","loc":{"line":4,"column":24},"parent":"F:\\Verstka\\tours\\node_modules\\tsparticles\\dist\\Plugins\\Absorbers\\AbsorberInstance.js","resolved":"F:\\Verstka\\tours\\node_modules\\tsparticles\\dist\\Utils\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position;\n        this.options = options;\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = Utils_1.NumberUtils.getValue(options.size) * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density * container.retina.reduceFactor;\n        const limit = options.size.limit;\n        this.limit = limit !== undefined ? limit * container.retina.pixelRatio * container.retina.reduceFactor : limit;\n        const color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_a = Utils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    }\n    attract(particle) {\n        const options = this.options;\n        if (options.draggable) {\n            const mouse = this.container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = Utils_1.NumberUtils.getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition();\n        const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(this.position, pos);\n        const angle = Math.atan2(dx, dy);\n        const acceleration = (this.mass / Math.pow(distance, 2)) * this.container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * this.container.retina.pixelRatio;\n            if (this.size > particle.getRadius() && distance < this.size - particle.getRadius()) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, angle, acceleration);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, angle, acceleration);\n            }\n            if (this.limit === undefined || this.size < this.limit) {\n                this.size += sizeFactor;\n            }\n            this.mass += sizeFactor * this.options.size.density * this.container.retina.reduceFactor;\n        }\n        else {\n            this.updateParticlePosition(particle, angle, acceleration);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = Utils_1.ColorUtils.getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    updateParticlePosition(particle, angle, acceleration) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const canvasSize = this.container.canvas.size;\n        if (particle.needsNewPosition) {\n            const pSize = particle.getRadius();\n            particle.position.x = Math.random() * (canvasSize.width - pSize * 2) + pSize;\n            particle.position.y = Math.random() * (canvasSize.height - pSize * 2) + pSize;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.orbitRadius === undefined) {\n                particle.orbitRadius = Utils_1.NumberUtils.getDistance(particle.getPosition(), this.position);\n            }\n            if (particle.orbitRadius <= this.size && !this.options.destroy) {\n                particle.orbitRadius = Math.random() * Math.max(canvasSize.width, canvasSize.height);\n            }\n            if (particle.orbitAngle === undefined) {\n                particle.orbitAngle = Math.random() * Math.PI * 2;\n            }\n            const orbitRadius = particle.orbitRadius;\n            const orbitAngle = particle.orbitAngle;\n            particle.velocity.horizontal = 0;\n            particle.velocity.vertical = 0;\n            particle.position.x = this.position.x + orbitRadius * Math.cos(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * Math.sin(orbitAngle);\n            particle.orbitRadius -= acceleration;\n            particle.orbitAngle +=\n                (((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : this.container.retina.moveSpeed) / 100) * this.container.retina.reduceFactor;\n        }\n        else {\n            particle.velocity.horizontal += Math.sin(angle) * acceleration;\n            particle.velocity.vertical += Math.cos(angle) * acceleration;\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}}],"sources":{"../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position;\n        this.options = options;\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = Utils_1.NumberUtils.getValue(options.size) * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density * container.retina.reduceFactor;\n        const limit = options.size.limit;\n        this.limit = limit !== undefined ? limit * container.retina.pixelRatio * container.retina.reduceFactor : limit;\n        const color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_a = Utils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    }\n    attract(particle) {\n        const options = this.options;\n        if (options.draggable) {\n            const mouse = this.container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = Utils_1.NumberUtils.getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition();\n        const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(this.position, pos);\n        const angle = Math.atan2(dx, dy);\n        const acceleration = (this.mass / Math.pow(distance, 2)) * this.container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * this.container.retina.pixelRatio;\n            if (this.size > particle.getRadius() && distance < this.size - particle.getRadius()) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, angle, acceleration);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, angle, acceleration);\n            }\n            if (this.limit === undefined || this.size < this.limit) {\n                this.size += sizeFactor;\n            }\n            this.mass += sizeFactor * this.options.size.density * this.container.retina.reduceFactor;\n        }\n        else {\n            this.updateParticlePosition(particle, angle, acceleration);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = Utils_1.ColorUtils.getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    updateParticlePosition(particle, angle, acceleration) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const canvasSize = this.container.canvas.size;\n        if (particle.needsNewPosition) {\n            const pSize = particle.getRadius();\n            particle.position.x = Math.random() * (canvasSize.width - pSize * 2) + pSize;\n            particle.position.y = Math.random() * (canvasSize.height - pSize * 2) + pSize;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.orbitRadius === undefined) {\n                particle.orbitRadius = Utils_1.NumberUtils.getDistance(particle.getPosition(), this.position);\n            }\n            if (particle.orbitRadius <= this.size && !this.options.destroy) {\n                particle.orbitRadius = Math.random() * Math.max(canvasSize.width, canvasSize.height);\n            }\n            if (particle.orbitAngle === undefined) {\n                particle.orbitAngle = Math.random() * Math.PI * 2;\n            }\n            const orbitRadius = particle.orbitRadius;\n            const orbitAngle = particle.orbitAngle;\n            particle.velocity.horizontal = 0;\n            particle.velocity.vertical = 0;\n            particle.position.x = this.position.x + orbitRadius * Math.cos(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * Math.sin(orbitAngle);\n            particle.orbitRadius -= acceleration;\n            particle.orbitAngle +=\n                (((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : this.container.retina.moveSpeed) / 100) * this.container.retina.reduceFactor;\n        }\n        else {\n            particle.velocity.horizontal += Math.sin(angle) * acceleration;\n            particle.velocity.vertical += Math.cos(angle) * acceleration;\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n"},"lineCount":138}},"error":null,"hash":"d974e474cdef793b42a005690efc59b5","cacheData":{"env":{}}}